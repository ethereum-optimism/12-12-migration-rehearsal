apiVersion: v1
kind: ConfigMap
metadata:
  name: op-node-env
data:
  OP_NODE_P2P_STATIC: "<will be provided on migration day>"
  OP_NODE_L1_ETH_RPC: <your-l1-url-here>
  OP_NODE_ROLLUP_CONFIG: /etc/op-node/rollup.json
  OP_NODE_RPC_ADDR: 0.0.0.0
  OP_NODE_RPC_PORT: "9545"
  OP_NODE_P2P_LISTEN_IP: 0.0.0.0
  OP_NODE_P2P_LISTEN_TCP_PORT: "9003"
  OP_NODE_P2P_LISTEN_UDP_PORT: "9003"
  OP_NODE_P2P_PRIV_PATH: /etc/op-node/p2p-node-key.txt
  OP_NODE_P2P_ADVERTISE_TCP: "9003"
  OP_NODE_P2P_ADVERTISE_UDP: "9003"
  OP_NODE_P2P_PEERSTORE_PATH: /p2p/peerstore
  OP_NODE_P2P_DISCOVERY_PATH: /p2p/discovery
  OP_NODE_METRICS_ENABLED: "true"
  OP_NODE_METRICS_ADDR: 0.0.0.0
  OP_NODE_METRICS_PORT: "7300"
  OP_NODE_L2_ENGINE_AUTH: /etc/op-node/jwt-secret.txt
  OP_NODE_SEQUENCER_L1_CONFS: "4"
  OP_NODE_VERIFIER_L1_CONFS: "4"
  OP_NODE_LOG_FORMAT: debug
  OP_NODE_LOG_LEVEL: info
  OP_NODE_PPROF_ENABLED: "true"
  OP_NODE_PPROF_PORT: "6666"
  OP_NODE_PPROF_ADDR: 0.0.0.0
  OP_NODE_HEARTBEAT_MONIKER: op-bedrock
  OP_NODE_HEARTBEAT_ENABLED: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: op-geth-env
data:
  OP_GETH_DATADIR_ARCHIVE_URL: <datadir you will receive on migration day>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: op-node-env
data:
  rollup.json: |
    <your-rollup-config-here>
  jwt-secret.txt: |
    <random 64 character hex string - must match the one in op-geth-env>
  p2p-node-key.txt: |
    <random 64 character hex string>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: op-geth-config
data:
  jwt-secret.txt: |
    <random 64 character hex string - must match the one in op-node-env>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: op-geth-scripts
data:
  entrypoint.sh: |
    #!/bin/sh
    set -exu

    apk add --no-cache curl

    if [ -z "${OP_GETH_DATADIR_ARCHIVE_URL-}" ]; then
      echo "Must specify OP_GETH_DATADIR_ARCHIVE_URL."
      exit 1
    fi

    datadir=${OP_GETH_DATADIR:-/db}
    chaindata_dir="$datadir/geth/chaindata"
    datadir_archive_path="$datadir/datadir.tar"

    if [ ! -d "$chaindata_dir" ]; then
      echo "Downloading chain data."
      curl -o "$datadir_archive_path" -L $OP_GETH_DATADIR_ARCHIVE_URL
      echo "Extracting chain data."
      tar -xvf "$datadir_archive_path" -C "$datadir"
    fi

    if [ -z "${SEQUENCER_HTTP-}" ]; then
      SEQ_HTTP=""
    else
      SEQ_HTTP="$SEQUENCER_HTTP"
    fi

    VERBOSITY=${GETH_VERBOSITY:-3}
    RPC_PORT="${RPC_PORT:-8545}"
    WS_PORT="${WS_PORT:-8546}"

    # Warning: Archive mode is required if you want to serve historical withdrawal proofs. 

    exec geth \
    	--datadir="$datadir" \
    	--verbosity="$VERBOSITY" \
    	--http \
    	--http.corsdomain="*" \
    	--http.vhosts="*" \
    	--http.addr=0.0.0.0 \
    	--http.port="$RPC_PORT" \
    	--http.api=web3,debug,eth,txpool,net,engine \
    	--ws \
    	--ws.addr=0.0.0.0 \
    	--ws.port="$WS_PORT" \
    	--ws.origins="*" \
    	--ws.api=debug,eth,txpool,net,engine \
    	--syncmode=full \
    	--nodiscover \
    	--maxpeers=1 \
    	--gcmode=archive \
    	--rollup.disabletxpoolgossip=true \
    	--rollup.sequencerhttp="https://goerli-migration-rehearsal-sequencer.optimism.io" \
        --rollup.historicalrpc="http://legacy-geth:8545" \ 
    	--authrpc.addr="0.0.0.0" \
    	--networkid=420 \
    	--authrpc.jwtsecret=/etc/op-geth/jwt-secret.txt
    	"$@"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: legacy-geth-env
data:
  CHAIN_ID: "420"
  NETWORK_ID: "420"
  ETH1_SYNC_SERVICE_ENABLE: false
  LEGACY_GETH_DATADIR_ARCHIVE_URL: "<datadir you will receive on migration day>"
  ROLLUP_BACKEND: l2
  ROLLUP_SYNC_SERVICE_ENABLE: false
  ROLLUP_TIMESTAMP_REFRESH: 5m
  ROLLUP_VERIFIER_ENABLE: true
  RPC_ADDR: 0.0.0.0
  RPC_API: eth,rollup,net,web3,debug
  RPC_CORS_DOMAIN: *
  RPC_ENABLE: true
  RPC_PORT: 8545
  RPC_VHOSTS: *
  TARGET_GAS_LIMIT: 15000000
  USING_OVM: true
  WS_ADDR: 0.0.0.0
  WS_API: eth,rollup,net,web3,debug
  WS_ORIGINS: *
  WS: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: legacy-geth-scripts
data:
  entrypoint.sh: |
    #!/bin/sh
    set -exu

    apk add --no-cache curl

    if [ -z "${LEGACY_GETH_DATADIR_ARCHIVE_URL-}" ]; then
      echo "Must specify LEGACY_GETH_DATADIR_ARCHIVE_URL."
      exit 1
    fi

    datadir=${LEGACY_GETH_DATADIR:-/db}
    chaindata_dir="$datadir/geth/chaindata"
    datadir_archive_path="$datadir/datadir.tar"

    if [ ! -d "$chaindata_dir" ]; then
      echo "Downloading chain data."
      curl -o "$datadir_archive_path" -L $LEGACY_GETH_DATADIR_ARCHIVE_URL
      echo "Extracting chain data."
      tar -xvf "$datadir_archive_path" -C "$datadir"
    fi

    VERBOSITY=${GETH_VERBOSITY:-3}
    RPC_PORT="${RPC_PORT:-8545}"
    WS_PORT="${WS_PORT:-8546}"

    # Warning: Archive mode is required if you want to serve historical withdrawal proofs. 

    exec geth \
        --datadir="$datadir" \
        --verbosity="$VERBOSITY" \
        --http \
        --http.corsdomain="*" \
        --http.vhosts="*" \
        --http.addr=0.0.0.0 \
        --http.port="$RPC_PORT" \
        --http.api=web3,debug,eth,txpool,net,engine \
        --ws \
        --ws.addr=0.0.0.0 \
        --ws.port="$WS_PORT" \
        --ws.origins="*" \
        --ws.api=debug,eth,txpool,net,engine \
        --syncmode=full \
        --nodiscover \
        --maxpeers=1 \
        --gcmode=archive
        --networkid=420
        "$@"